knitr::opts_chunk$set(echo = TRUE,
fig.align = 'center')
library(skimr)
library(ggplot2)
library(ggthemes)
library(tidyverse)
Ames <- read.table('https://www.openintro.org/data/csv/ames.csv',
header = TRUE,
sep = ',')
table(Ames$Utilities)
summary_stats <- skimr::skim(Ames)
# Filter variables with complete rate below 60%
low_complete_rate_vars <- summary_stats %>%
dplyr::filter(complete_rate < 0.6)
Ames <- Ames[, !names(Ames) %in% c("Alley", "Fireplace.Qu", "Pool.QC", "Fence", "Misc.Feature")]
predictors <- c("price" ,"Lot.Frontage", "Lot.Area", "Overall.Qual", "Overall.Cond", "Year.Built",
"Year.Remod.Add", "BsmtFin.SF.1", "Total.Bsmt.SF", "X1st.Flr.SF", "X2nd.Flr.SF",
"Garage.Area", "Full.Bath", "Half.Bath", "Bedroom.AbvGr", "Fireplaces")
ames_clean <- Ames[,predictors]
ames_clean <- na.omit(ames_clean)
head(ames_clean)
ames_clean<-na.omit(ames_clean)
sum(is.na.data.frame(ames_clean))
rmse = function(actual, predicted) {
sqrt(mean((actual - predicted) ^ 2))
}
get_complexity = function(model) {
length(coef(model)) - 1
}
fo = "price ~"
rmse.list = c()
for (feature in predictors[2:16]){
fo = paste(fo,"+",feature) # formula
regression = lm(formula = fo, data = ames_clean) # linear regression
rmse.regression = rmse(ames_clean$price,regression$fitted.values) # calc rmse
rmse.list = append(rmse.list,rmse.regression) # record the rmse
if (get_complexity(regression)>15){ # make sure the complexity length <= 15
break
}
}
rmse.list
results <- data.frame(
complexity = 1:length(rmse.list),
rmse = unlist(rmse.list)
)
ggplot(results, aes(x = complexity, y = rmse)) +
geom_line() +
geom_point() +
labs(x = "Model complexity", y = "RMSE") +
theme_stata()
View(summary_stats)
summary_stats
head(summary_stats)
sum(is.na.data.frame(ames_clean))
fo = "Lot.Area ~"
rmse.list = c()
for (feature in predictors[2:16]){
fo = paste(fo,"+",feature) # formula
regression = lm(formula = fo, data = ames_clean) # linear regression
rmse.regression = rmse(ames_clean$price,regression$fitted.values) # calc rmse
rmse.list = append(rmse.list,rmse.regression) # record the rmse
if (get_complexity(regression)>15){ # make sure the complexity length <= 15
break
}
}
rmse.list
knitr::opts_chunk$set(echo = TRUE,
fig.align = 'center')
library(skimr)
library(ggplot2)
library(ggthemes)
library(tidyverse)
Ames <- read.table('https://www.openintro.org/data/csv/ames.csv',
header = TRUE,
sep = ',')
table(Ames$Utilities)
summary_stats <- skimr::skim(Ames)
# Filter variables with complete rate below 60%
low_complete_rate_vars <- summary_stats %>%
dplyr::filter(complete_rate < 0.6)
Ames <- Ames[, !names(Ames) %in% c("Alley", "Fireplace.Qu", "Pool.QC", "Fence", "Misc.Feature")]
predictors <- c("price" ,"Lot.Frontage", "Lot.Area", "Overall.Qual", "Overall.Cond", "Year.Built",
"Year.Remod.Add", "BsmtFin.SF.1", "Total.Bsmt.SF", "X1st.Flr.SF", "X2nd.Flr.SF",
"Garage.Area", "Full.Bath", "Half.Bath", "Bedroom.AbvGr", "Fireplaces")
ames_clean <- Ames[,predictors]
ames_clean <- na.omit(ames_clean)
head(ames_clean)
sum(is.na.data.frame(ames_clean))
rmse = function(actual, predicted) {
sqrt(mean((actual - predicted) ^ 2))
}
get_complexity = function(model) {
length(coef(model)) - 1
}
fo = "Lot.Area ~"
rmse.list = c()
for (feature in predictors[2:16]){
fo = paste(fo,"+",feature) # formula
regression = lm(formula = fo, data = ames_clean) # linear regression
rmse.regression = rmse(ames_clean$price,regression$fitted.values) # calc rmse
rmse.list = append(rmse.list,rmse.regression) # record the rmse
if (get_complexity(regression)>15){ # make sure the complexity length <= 15
break
}
}
rmse.list
results <- data.frame(
complexity = 1:length(rmse.list),
rmse = unlist(rmse.list)
)
ggplot(results, aes(x = complexity, y = rmse)) +
geom_line() +
geom_point() +
labs(x = "Model complexity", y = "RMSE") +
theme_stata()
fo = "BsmtFin.SF.1 ~"
rmse.list = c()
for (feature in predictors[2:16]){
fo = paste(fo,"+",feature) # formula
regression = lm(formula = fo, data = ames_clean) # linear regression
rmse.regression = rmse(ames_clean$price,regression$fitted.values) # calc rmse
rmse.list = append(rmse.list,rmse.regression) # record the rmse
if (get_complexity(regression)>15){ # make sure the complexity length <= 15
break
}
}
rmse.list
results <- data.frame(
complexity = 1:length(rmse.list),
rmse = unlist(rmse.list)
)
ggplot(results, aes(x = complexity, y = rmse)) +
geom_line() +
geom_point() +
labs(x = "Model complexity", y = "RMSE") +
theme_stata()
fo = "BsmtFin.SF.1 ~"
rmse.list = c()
for (feature in predictors[2:16]){
fo = paste(fo,"+",feature) # formula
regression = lm(formula = fo, data = ames_clean) # linear regression
rmse.regression = rmse(ames_clean$price,regression$fitted.values) # calc rmse
rmse.list = append(rmse.list,rmse.regression) # record the rmse
if (get_complexity(regression)>15){ # make sure the complexity length <= 15
break
}
}
rmse.list
head(Ames)
names(Ames)
head(Ames)
predictors <- c("price" ,"area", "Lot.Area", "Overall.Qual", "Overall.Cond", "Year.Built",
"Year.Remod.Add", "BsmtFin.SF.1", "Total.Bsmt.SF", "X1st.Flr.SF", "X2nd.Flr.SF",
"Garage.Area", "Full.Bath", "Half.Bath", "Bedroom.AbvGr", "Fireplaces")
ames_clean <- Ames[,predictors]
ames_clean <- na.omit(ames_clean)
head(ames_clean)
sum(is.na.data.frame(ames_clean))
rmse = function(actual, predicted) {
sqrt(mean((actual - predicted) ^ 2))
}
get_complexity = function(model) {
length(coef(model)) - 1
}
fo = "BsmtFin.SF.1 ~"
rmse.list = c()
for (feature in predictors[2:16]){
fo = paste(fo,"+",feature) # formula
regression = lm(formula = fo, data = ames_clean) # linear regression
rmse.regression = rmse(ames_clean$price,regression$fitted.values) # calc rmse
rmse.list = append(rmse.list,rmse.regression) # record the rmse
if (get_complexity(regression)>15){ # make sure the complexity length <= 15
break
}
}
rmse.list
results <- data.frame(
complexity = 1:length(rmse.list),
rmse = unlist(rmse.list)
)
ggplot(results, aes(x = complexity, y = rmse)) +
geom_line() +
geom_point() +
labs(x = "Model complexity", y = "RMSE") +
theme_stata()
fo = "area ~"
rmse.list = c()
for (feature in predictors[2:16]){
fo = paste(fo,"+",feature) # formula
regression = lm(formula = fo, data = ames_clean) # linear regression
rmse.regression = rmse(ames_clean$price,regression$fitted.values) # calc rmse
rmse.list = append(rmse.list,rmse.regression) # record the rmse
if (get_complexity(regression)>15){ # make sure the complexity length <= 15
break
}
}
rmse.list
results <- data.frame(
complexity = 1:length(rmse.list),
rmse = unlist(rmse.list)
)
ggplot(results, aes(x = complexity, y = rmse)) +
geom_line() +
geom_point() +
labs(x = "Model complexity", y = "RMSE") +
theme_stata()
